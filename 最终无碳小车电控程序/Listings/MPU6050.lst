C51 COMPILER V9.56.0.0   MPU6050                                                           06/04/2017 15:20:10 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE MPU6050
OBJECT MODULE PLACED IN .\Objects\MPU6050.obj
COMPILER INVOKED BY: D:\Keil5_C51\C51\BIN\C51.EXE code\MPU6050.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\code) DEBUG OBJECTEXT
                    -END PRINT(.\Listings\MPU6050.lst) TABS(2) OBJECT(.\Objects\MPU6050.obj)

line level    source

   1          #include <MPU6050.h>
   2          //**************************************
   3          //I2C起始信号
   4          //**************************************
   5          void I2C_Start()
   6          {
   7   1        SDA3 = 1;                    //拉高数据线
   8   1        SCL3 = 1;                    //拉高时钟线
   9   1        Delay5us();                 //延时
  10   1        SDA3 = 0;                    //产生下降沿
  11   1        Delay5us();                 //延时
  12   1        SCL3 = 0;                    //拉低时钟线
  13   1      }
  14          //**************************************
  15          //I2C停止信号
  16          //**************************************
  17          void I2C_Stop()
  18          {
  19   1        SDA3 = 0;                    //拉低数据线
  20   1        SCL3 = 1;                    //拉高时钟线
  21   1        Delay5us();                 //延时
  22   1        SDA3 = 1;                    //产生上升沿
  23   1        Delay5us();                 //延时
  24   1      }
  25          //**************************************
  26          //I2C发送应答信号
  27          //入口参数:ack (0:ACK 1:NAK)
  28          //**************************************
  29          void I2C_SendACK(bit ack)
  30          {
  31   1        SDA3 = ack;                  //写应答信号
  32   1        SCL3 = 1;                    //拉高时钟线
  33   1        Delay5us();                 //延时
  34   1        SCL3 = 0;                    //拉低时钟线
  35   1        Delay5us();                 //延时
  36   1      }
  37          //**************************************
  38          //I2C接收应答信号
  39          //**************************************
  40          bit I2C_RecvACK()
  41          {
  42   1        SCL3 = 1;                    //拉高时钟线
  43   1        Delay5us();                 //延时
  44   1        CY = SDA3;                   //读应答信号
  45   1        SCL3 = 0;                    //拉低时钟线
  46   1        Delay5us();                 //延时
  47   1        return CY;
  48   1      }
  49          //**************************************
  50          //向I2C总线发送一个字节数据
  51          //**************************************
  52          void I2C_SendByte(u8i dat)
  53          {
  54   1        u8i i;
C51 COMPILER V9.56.0.0   MPU6050                                                           06/04/2017 15:20:10 PAGE 2   

  55   1        for (i=0; i<8; i++)         //8位计数器
  56   1        {
  57   2          dat <<= 1;              //移出数据的最高位
  58   2          SDA3 = CY;               //送数据口
  59   2          SCL3 = 1;                //拉高时钟线
  60   2          Delay5us();             //延时
  61   2          SCL3 = 0;                //拉低时钟线
  62   2          Delay5us();             //延时
  63   2        }
  64   1        I2C_RecvACK();
  65   1      }
  66          //**************************************
  67          //从I2C总线接收一个字节数据
  68          //**************************************
  69          u8 I2C_RecvByte()
  70          {
  71   1        u8i i;
  72   1        u8i dat = 0;
  73   1        SDA3 = 1;                    //使能内部上拉,准备读取数据,
  74   1        for (i=0; i<8; i++)         //8位计数器
  75   1        {
  76   2          dat <<= 1;
  77   2          SCL3 = 1;                //拉高时钟线
  78   2          Delay5us();             //延时
  79   2          dat |= SDA3;             //读数据
  80   2          SCL3 = 0;                //拉低时钟线
  81   2          Delay5us();             //延时
  82   2        }
  83   1        return dat;
  84   1      }
  85          //**************************************
  86          //向I2C设备写入一个字节数据
  87          //**************************************
  88          void Single_WriteI2C(u8i REG_Address,u8i REG_data)
  89          {
  90   1        I2C_Start();                  //起始信号
  91   1        I2C_SendByte(SlaveAddress);   //发送设备地址+写信号
  92   1        I2C_SendByte(REG_Address);    //内部寄存器地址，
  93   1        I2C_SendByte(REG_data);       //内部寄存器数据，
  94   1        I2C_Stop();                   //发送停止信号
  95   1      }
  96          //**************************************
  97          //从I2C设备读取一个字节数据
  98          //**************************************
  99          u8 Single_ReadI2C(u8i REG_Address)
 100          {
 101   1        u8i REG_data;
 102   1        I2C_Start();                   //起始信号
 103   1        I2C_SendByte(SlaveAddress);    //发送设备地址+写信号
 104   1        I2C_SendByte(REG_Address);     //发送存储单元地址，从0开始
 105   1        I2C_Start();                   //起始信号
 106   1        I2C_SendByte(SlaveAddress+1);  //发送设备地址+读信号
 107   1        REG_data=I2C_RecvByte();       //读出寄存器数据
 108   1        I2C_SendACK(1);                //接收应答信号
 109   1        I2C_Stop();                    //停止信号
 110   1        return REG_data;
 111   1      }
 112          //**************************************
 113          //初始化MPU6050
 114          //**************************************
 115          void InitMPU6050()
 116          {
C51 COMPILER V9.56.0.0   MPU6050                                                           06/04/2017 15:20:10 PAGE 3   

 117   1        Single_WriteI2C(PWR_MGMT_1, 0x00);  //解除休眠状态
 118   1        Single_WriteI2C(SMPLRT_DIV, 0x07);
 119   1        Single_WriteI2C(CONFIG, 0x06);
 120   1        Single_WriteI2C(GYRO_CONFIG, 0x18);
 121   1        Single_WriteI2C(ACCEL_CONFIG, 0x01);
 122   1      }
 123          //**************************************
 124          //合成数据
 125          //**************************************
 126          int GetData(u8i REG_Address)
 127          {
 128   1        u8i H,L;
 129   1        H=Single_ReadI2C(REG_Address);
 130   1        L=Single_ReadI2C(REG_Address+1);
 131   1        return (H<<8)+L;   //合成数据
 132   1      }
 133          /*
 134              GetData(ACCEL_XOUT_H);  //显示X轴加速度
 135              GetData(ACCEL_YOUT_H);  //显示Y轴加速度
 136              GetData(ACCEL_ZOUT_H);  //显示Z轴加速度
 137              GetData(GYRO_XOUT_H);   //显示X轴角速度
 138              GetData(GYRO_YOUT_H);   //显示Y轴角速度
 139              GetData(GYRO_ZOUT_H);   //显示Z轴角速度
 140          */


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    273    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       5
   IDATA SIZE       =   ----       6
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
