C51 COMPILER V9.56.0.0   CAR                                                               06/04/2017 15:20:09 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE CAR
OBJECT MODULE PLACED IN .\Objects\Car.obj
COMPILER INVOKED BY: D:\Keil5_C51\C51\BIN\C51.EXE Car.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\code) DEBUG OBJECTEXTEND PRINT
                    -(.\Listings\Car.lst) TABS(2) OBJECT(.\Objects\Car.obj)

line level    source

   1          /*********************************************************************************
   2              2017全国大学生工程训练综合能力竞赛
   3                无碳小车电控组
   4                指导老师：李湘勤
   5              组员：连辉杰 肖佳全 陈思杰
   6              
   7          注：本工程使用Keil_uVision5创建，请使用Keil_uVision5打开。
   8          Keil_uVision4及以下版本可能会出现不兼容现象，可使用Keil_uVision4创建新工程，再添加本程序C文件即可。
   9          **********************************************************************************/
  10          #include <STC15F2K60S2.H>
  11          #include <math.h>
  12          #include <delay.h>
  13          #include <serial.h>
  14          #include <direction.h>
  15          #include <distance.h>
  16          #include <oled.h>
  17          #include <HMC5883.h>
  18          #include <MPU6050.h>
*** WARNING C317 IN LINE 33 OF .\code\MPU6050.h: attempt to redefine macro 'SlaveAddress'
  19          /**********************************************************************************
  20          宏定义
  21          */
  22          #define speed_add_up 50   //增度上限
  23          #define speed_up     15   //速度上限
  24          #define speed_down   8    //速度下限
  25          #define BrakeOn_angle   93  //刹重锤角度
  26          #define BrakeOff_angle  70  //放重锤角度
  27          #define angle_up     30  //最大偏角
  28          #define upslope_deviation  30  //上坡识别误差
  29          #define slopetop_deviation 15  //坡顶识别误差
  30          #define shortlimit     65
  31          #define longlimit      80
  32          #define priority_angle  8
  33          #define count_up      100
  34          #define safe_distance   30
  35          #define emergency_angle  8
  36          /***********************************************************************************
  37          变量声明
  38          */
  39          extern u8 BUF[8];
  40          u16i time_count = 0;
  41          u16i second_count = 0;
  42          u8i speed_v = 6;
  43          bit Brake_flag = 1;
  44          bit On_upslope_flag = 0;
  45          bit On_slopetop_flag = 0;
  46          u8i  stop_angle = 90;
  47          u8i ostop_angle = 90;
  48          sbit cc = P3^3;
  49          bit stop = 0;
  50          bit Wait_flag = 0;
  51          u16i  ai = 0,i,j;
  52          u16i x,y,z,angle_direction;
  53          u16i Vertical;
C51 COMPILER V9.56.0.0   CAR                                                               06/04/2017 15:20:09 PAGE 2   

  54          u8i first_direction,first_horizontal;
  55          u8  Dic = 1;
  56          u8i L[5] = {0};
  57          u8i oL[5] = {0};
  58          u8i left_dis,mid_dis,right_dis;
  59          u8i state = 'A';
  60          bit dd1 = 0;
  61          bit dd2 = 0;
  62          u8i angle = 90;
  63          u8i oangle = 90;
  64          float scaling = 0;  //左右对比距离比例
  65          u8 deflection = 0;  //左右偏角
  66          u16i way_count_last = 0;
  67          u16i way_count = 0;
  68          u16i journey =0;
  69          /**********************************************************************************
  70          函数声明
  71          */
  72          void Get_Original_Data();
  73          void Get_ADC();
  74          u8 Transform(u16 value);
  75          void Angle_Cal();
  76          void Drection_Cal();
  77          void Show_Data();
  78          void Brake_judge();
  79          /**********************************************************************************
  80          主函数
  81          */
  82          void main()
  83          {
  84   1        TimerInit();
  85   1        InitMPU6050();
  86   1        Init_HMC5883();
  87   1        Initlcd();
  88   1        InitADC(); //初始化ADC
  89   1        IE = 0xae;
  90   1      //使能总中断开关，ADC中断,外部中断1，定时器0、1中断
  91   1        //EA ELVD EADC ES ET1 EX1 ET0 EX0
  92   1        //1010 1110
  93   1        IE2 |= 0x04;
  94   1        OLED_Clear();
  95   1        OLED_ShowString(0,0,"Carbon-Free Car",16);
  96   1        for(ai=1; ai<104; ai++)
  97   1          OLED_ShowString(ai,2,"=>>",16);
  98   1        OLED_Clear();
  99   1        OLED_ShowString(8,0,"Left Mid Right",16);
 100   1        ai = 0;
 101   1        TR0 = 1;
 102   1        delayms(8);
 103   1        TR1 = 1;
 104   1        Get_Original_Data();  //获取起步数据
 105   1        while(1)
 106   1        {
 107   2          Get_Direction();   //磁场方向数据采集
 108   2          Drection_Cal();    //计算方向角
 109   2          Brake_judge();     //刹车判断
 110   2          Get_ADC();         //距离数据采集
 111   2          Angle_Cal();       //计算转角
 112   2          Show_Data();       //显示数据
 113   2        }
 114   1      }
 115          /**********************************************************************************
C51 COMPILER V9.56.0.0   CAR                                                               06/04/2017 15:20:09 PAGE 3   

 116          获取起步数据
 117          */
 118          void Get_Original_Data()
 119          {
 120   1        u8i direcBUF[10];
 121   1        u8i all = 0;
 122   1        for(ai=0; ai<10; ai++)
 123   1        {
 124   2          Get_Direction();   //磁场方向数据采集
 125   2          Drection_Cal();    //计算方向角
 126   2          direcBUF[ai] = Dic;
 127   2        }
 128   1        for(ai=0; ai<10; ai++)
 129   1          all += direcBUF[ai];
 130   1        first_direction = all/10;
 131   1        OLED_ShowNum(104,2,first_direction,1,16);
 132   1        first_horizontal = z;
 133   1      }
 134          /**********************************************************************************
 135          计算方向角
 136          */
 137          void Drection_Cal()
 138          {
 139   1        x = BUF[0] << 8 | BUF[1];
 140   1        //z = BUF[2] << 8 | BUF[3];
 141   1        y = BUF[4] << 8 | BUF[5];
 142   1        if(x>300&&x<32768)
 143   1        {
 144   2          if(y<65350)
 145   2            Dic = 1;
 146   2          else Dic = 2;
 147   2        }
 148   1        else if(x>32768&&x<65390)
 149   1        {
 150   2          if(y>65350)
 151   2            Dic = 5;
 152   2          else Dic = 6;
 153   2        }
 154   1        if(y<32768)
 155   1        {
 156   2          if(x<32768)
 157   2            Dic = 3;
 158   2          else Dic = 4;
 159   2        }
 160   1        else if(y<65100)
 161   1        {
 162   2          if(x>32768)
 163   2            Dic = 7;
 164   2          else Dic = 8;
 165   2        }
 166   1        Vertical = GetData(ACCEL_XOUT_H);
 167   1      }
 168          /**********************************************************************************
 169          刹车判断
 170          */
 171          void Brake_judge()
 172          {
 173   1        if(!On_slopetop_flag)
 174   1        {
 175   2          if(first_direction <= 3)
 176   2            if(Dic>=(first_direction+3)&&(Dic<=first_direction+5))
 177   2              Brake_flag = 0;
C51 COMPILER V9.56.0.0   CAR                                                               06/04/2017 15:20:09 PAGE 4   

 178   2          if(first_direction >= 6)
 179   2            if(Dic>=(first_direction-5)&&Dic<=(first_direction-3))
 180   2              Brake_flag = 0;
 181   2          if(first_direction==4)
 182   2            if(Dic==1||Dic==7||Dic==8)
 183   2              Brake_flag = 0;
 184   2          if(first_direction==5)
 185   2            if(Dic==1||Dic==2||Dic==8)
 186   2              Brake_flag = 0;
 187   2        }
 188   1        if(Brake_flag==0)
 189   1        {
 190   2          state = 'B';
 191   2          if((Vertical-first_horizontal)>upslope_deviation||(first_horizontal-Vertical)>upslope_deviation)
 192   2          {
 193   3            On_upslope_flag = 1;
 194   3            state = 'C';
 195   3          }
 196   2        }
 197   1        if(On_upslope_flag)
 198   1          if((Vertical-first_horizontal)<slopetop_deviation||(first_horizontal-Vertical)<slopetop_deviation)
 199   1          {
 200   2            On_slopetop_flag = 1;
 201   2            state = 'D';
 202   2          }
 203   1        if(On_slopetop_flag && On_upslope_flag)
 204   1        {
 205   2          Brake_flag = 1;
 206   2          state = 'E';
 207   2        }
 208   1      }
 209          /**********************************************************************************
 210          距离数据采集
 211          */
 212          void Get_ADC()
 213          {
 214   1        u8 i,j;
 215   1        u16 ad[10] = {0};
 216   1        for(j = 1; j<4; j++)
 217   1        {
 218   2          for(i = 0; i<10; i++)
 219   2            ad[i] = ADC(j);
 220   2          Error_Correct_ad(ad,10);
 221   2          L[j] = Transform(ad[5]);
 222   2        }
 223   1        for(j = 1; j<4; j++)
 224   1        {
 225   2          L[j]  = (L[j]+oL[j])/2;
 226   2          oL[j] = L[j];
 227   2        }
 228   1        left_dis  = L[1];
 229   1        mid_dis   = L[2];
 230   1        right_dis = L[3];
 231   1      }
 232          /**********************************************************************************
 233          距离数据转换
 234          */
 235          u8 Transform(u16 advalue)
 236          {
 237   1        if(advalue >500)
 238   1          advalue = 500;
 239   1        if(advalue < 75)
C51 COMPILER V9.56.0.0   CAR                                                               06/04/2017 15:20:09 PAGE 5   

 240   1          advalue = 75;
 241   1        if(advalue > 125)
 242   1          return   22/(advalue*0.004883 - 0.18);
 243   1        else
 244   1          return 29.3/(advalue*0.004883 - 0.024);
 245   1      }
 246          /**********************************************************************************
 247          显示数据
 248          */
 249          void Show_Data()
 250          {
 251   1        if(sw1==0)
 252   1        {
 253   2          OLED_ShowNum( 8,1,left_dis,3,16);
 254   2          OLED_ShowNum(43,1,mid_dis,3,16);
 255   2          OLED_ShowNum(86,1,right_dis,3,16);
 256   2          OLED_ShowNum(120,2,Dic,1,16);
 257   2        }
 258   1        if(sw2==0)
 259   1        {
 260   2          OLED_ShowNum(0, 3,journey,  5,16);
 261   2          OLED_ShowNum(43,3,way_count,4,16);
 262   2          OLED_ShowNum(43,2,way_count_last,4,16);
 263   2          OLED_ShowNum(86,3,angle,    3,16);
 264   2        }
 265   1        if(sw3==0)
 266   1        {
 267   2          OLED_ShowChar(80,2,state,16);
 268   2          OLED_ShowNum(0, 2,z,  5,16);
 269   2        }
 270   1      }
 271          /**********************************************************************************
 272          计算偏转角
 273          */
 274          void Angle_Cal()
 275          {
 276   1        if(left_dis>right_dis)
 277   1        {
 278   2          scaling = (left_dis - right_dis) / right_dis;
 279   2          if(scaling>1) scaling = 1;
 280   2          deflection = scaling * angle_up;
 281   2          angle = 90-deflection;
 282   2          if(angle<45 ) angle =  45;
 283   2        }
 284   1        else
 285   1        {
 286   2          scaling = (right_dis - left_dis) / left_dis;
 287   2          if(scaling>1) scaling = 1;
 288   2          deflection = scaling * angle_up;
 289   2          angle = 90+deflection;
 290   2          if(angle>135) angle = 135;
 291   2        }
 292   1      }
 293          /***********************************************************************************
 294          中断处理函数
 295          */
 296          void countITR() interrupt 2  //速度中断统计
 297          {
 298   1        if(Wait_flag == 0)
 299   1        {
 300   2          T2L = 0x00;   //设置定时初值  10ms 11.0592 12T
 301   2          T2H = 0xDC;   //设置定时初值
C51 COMPILER V9.56.0.0   CAR                                                               06/04/2017 15:20:09 PAGE 6   

 302   2          AUXR |=0X10;  //开始定时消抖计时
 303   2          EX1 = 0;
 304   2          Wait_flag = 1;
 305   2          way_count++;
 306   2          journey++;
 307   2        }
 308   1      }
 309          void clear_flag() interrupt 12  //定时消抖处理
 310          {
 311   1        Wait_flag = 0; //清除标志位，关闭计时
 312   1        AUXR &=0XEF;
 313   1        EX1 = 1;
 314   1      }
 315          void Direction_ctrl() interrupt 1  //方向舵机PWM控制
 316          {
 317   1        u8i  speed_v2;
 318   1        u16i H,L;
 319   1        TR0 = 0;
 320   1        TH0 = 0;
 321   1        TL0 = 0;
 322   1        if(dd1 == 0)
 323   1        {
 324   2          EX1 = 0;
 325   2          H = 65075 - oangle*10.23;
 326   2          TH0 = H/256;
 327   2          TL0 = H%256;
 328   2          d1  = 1;
 329   2          dd1 = 1;
 330   2          TR0 = 1;
 331   2        }
 332   1        else
 333   1        {
 334   2          EX1 = 1;
 335   2          L = 47566 + oangle*10.23;
 336   2          TH0 = L/256;
 337   2          TL0 = L%256;
 338   2          d1  = 0;
 339   2          dd1 = 0;
 340   2          TR0 = 1;
 341   2          speed_v2 = (32-speed_v)*1.5;
 342   2          if(angle > oangle)
 343   2            oangle += ((angle - oangle)/speed_v2+2);
 344   2          else if(angle < oangle)
 345   2            oangle -= ((oangle - angle)/speed_v2+2);
 346   2        }
 347   1      }
 348          void Brake_ctrl() interrupt 3  //刹车舵机PWM控制
 349          {
 350   1        u16i H,L;
 351   1        TR1 = 0;
 352   1        TH1 = 0;
 353   1        TL1 = 0;
 354   1        if(dd2 == 0)
 355   1        {
 356   2          EX1 = 0;
 357   2          H = 65075 - ostop_angle*10.23;
 358   2          TH1 = H/256;
 359   2          TL1 = H%256;
 360   2          d2  = 1;
 361   2          dd2 = 1;
 362   2          TR1 = 1;
 363   2        }
C51 COMPILER V9.56.0.0   CAR                                                               06/04/2017 15:20:09 PAGE 7   

 364   1        else
 365   1        {
 366   2          EX1 = 1;
 367   2          L = 47566 + ostop_angle*10.23;
 368   2          TH1 = L/256;
 369   2          TL1 = L%256;
 370   2          d2  = 0;
 371   2          dd2 = 0;
 372   2          TR1 = 1;
 373   2          time_count ++;
 374   2          second_count = time_count/50;
 375   2          ai++;
 376   2          if(ai >= 20)
 377   2          {
 378   3            ai = 0;
 379   3            if((way_count > way_count_last)&&(way_count - way_count_last)>speed_add_up)
 380   3              way_count = way_count_last + speed_add_up;
 381   3            way_count_last = way_count;
 382   3            speed_v = way_count;
 383   3            if(speed_v > 25) speed_v = 25;
 384   3            if(speed_v < 6)  speed_v = 6;
 385   3            if(Brake_flag)
 386   3            {
 387   4              if(way_count >= speed_up)
 388   4                ostop_angle = BrakeOn_angle;
 389   4              else if(way_count <= speed_down)
 390   4                ostop_angle = BrakeOff_angle;
 391   4            }
 392   3            else ostop_angle = BrakeOff_angle;
 393   3            way_count = 0;
 394   3          }
 395   2        }
 396   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   3087    ----
   CONSTANT SIZE    =   2155    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6      58
   IDATA SIZE       =     47      20
   BIT SIZE         =      7    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
