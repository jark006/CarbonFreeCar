C51 COMPILER V9.56.0.0   HMC5883                                                           06/04/2017 15:20:10 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE HMC5883
OBJECT MODULE PLACED IN .\Objects\HMC5883.obj
COMPILER INVOKED BY: D:\Keil5_C51\C51\BIN\C51.EXE code\HMC5883.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\code) DEBUG OBJECTEXT
                    -END PRINT(.\Listings\HMC5883.lst) TABS(2) OBJECT(.\Objects\HMC5883.obj)

line level    source

   1          #include <HMC5883.h>
   2          u8 BUF[8];                         //接收数据缓存区
   3          /**************************************
   4          起始信号
   5          **************************************/
   6          void HMC5883_Start()
   7          {
   8   1        SDA2 = 1;                    //拉高数据线
   9   1        SCL2 = 1;                    //拉高时钟线
  10   1        Delay5us();                 //延时
  11   1        SDA2 = 0;                    //产生下降沿
  12   1        Delay5us();                 //延时
  13   1        SCL2 = 0;                    //拉低时钟线
  14   1      }
  15          /**************************************
  16          停止信号
  17          **************************************/
  18          void HMC5883_Stop()
  19          {
  20   1        SDA2 = 0;                    //拉低数据线
  21   1        SCL2 = 1;                    //拉高时钟线
  22   1        Delay5us();                 //延时
  23   1        SDA2 = 1;                    //产生上升沿
  24   1        Delay5us();                 //延时
  25   1      }
  26          /**************************************
  27          发送应答信号
  28          入口参数:ack (0:ACK 1:NAK)
  29          **************************************/
  30          void HMC5883_SendACK(bit ack)
  31          {
  32   1        SDA2 = ack;                  //写应答信号
  33   1        SCL2 = 1;                    //拉高时钟线
  34   1        Delay5us();                 //延时
  35   1        SCL2 = 0;                    //拉低时钟线
  36   1        Delay5us();                 //延时
  37   1      }
  38          /**************************************
  39          接收应答信号
  40          **************************************/
  41          bit HMC5883_RecvACK()
  42          {
  43   1        SCL2 = 1;                    //拉高时钟线
  44   1        Delay5us();                 //延时
  45   1        CY = SDA2;                   //读应答信号
  46   1        SCL2 = 0;                    //拉低时钟线
  47   1        Delay5us();                 //延时
  48   1        return CY;
  49   1      }
  50          /**************************************
  51          向IIC总线发送一个字节数据
  52          **************************************/
  53          void HMC5883_SendByte(u8 dat)
  54          {
C51 COMPILER V9.56.0.0   HMC5883                                                           06/04/2017 15:20:10 PAGE 2   

  55   1        u8 i;
  56   1        for (i=0; i<8; i++)         //8位计数器
  57   1        {
  58   2          dat <<= 1;              //移出数据的最高位
  59   2          SDA2 = CY;               //送数据口
  60   2          SCL2 = 1;                //拉高时钟线
  61   2          Delay5us();             //延时
  62   2          SCL2 = 0;                //拉低时钟线
  63   2          Delay5us();             //延时
  64   2        }
  65   1        HMC5883_RecvACK();
  66   1      }
  67          /**************************************
  68          从IIC总线接收一个字节数据
  69          **************************************/
  70          u8 HMC5883_RecvByte()
  71          {
  72   1        u8 i;
  73   1        u8 dat = 0;
  74   1        SDA2 = 1;                    //使能内部上拉,准备读取数据,
  75   1        for (i=0; i<8; i++)         //8位计数器
  76   1        {
  77   2          dat <<= 1;
  78   2          SCL2 = 1;                //拉高时钟线
  79   2          Delay5us();             //延时
  80   2          dat |= SDA2;             //读数据
  81   2          SCL2 = 0;                //拉低时钟线
  82   2          Delay5us();             //延时
  83   2        }
  84   1        return dat;
  85   1      }
  86          //***************************************************
  87          void Single_Write_HMC5883(uchar REG_Address,uchar REG_data)
  88          {
  89   1        HMC5883_Start();                  //起始信号
  90   1        HMC5883_SendByte(SlaveAddress);   //发送设备地址+写信号
  91   1        HMC5883_SendByte(REG_Address);    //内部寄存器地址，请参考中文pdf
  92   1        HMC5883_SendByte(REG_data);       //内部寄存器数据，请参考中文pdf
  93   1        HMC5883_Stop();                   //发送停止信号
  94   1      }
  95          //********单字节读取内部寄存器*************************
  96          uchar Single_Read_HMC5883(uchar REG_Address)
  97          {
  98   1        uchar REG_data;
  99   1        HMC5883_Start();                          //起始信号
 100   1        HMC5883_SendByte(SlaveAddress);           //发送设备地址+写信号
 101   1        HMC5883_SendByte(REG_Address);                   //发送存储单元地址，从0开始
 102   1        HMC5883_Start();                          //起始信号
 103   1        HMC5883_SendByte(SlaveAddress+1);         //发送设备地址+读信号
 104   1        REG_data=HMC5883_RecvByte();              //读出寄存器数据
 105   1        HMC5883_SendACK(1);
 106   1        HMC5883_Stop();                           //停止信号
 107   1        return REG_data;
 108   1      }
 109          //******************************************************
 110          //
 111          //连续读出HMC5883内部角度数据，地址范围0x3~0x5
 112          //
 113          //******************************************************
 114          void Get_Direction(void)
 115          {
 116   1        uchar i;
C51 COMPILER V9.56.0.0   HMC5883                                                           06/04/2017 15:20:10 PAGE 3   

 117   1        HMC5883_Start();                          //起始信号
 118   1        HMC5883_SendByte(SlaveAddress);           //发送设备地址+写信号
 119   1        HMC5883_SendByte(0x03);                   //发送存储单元地址，从0x3开始
 120   1        HMC5883_Start();                          //起始信号
 121   1        HMC5883_SendByte(SlaveAddress+1);         //发送设备地址+读信号
 122   1        for (i=0; i<6; i++)                      //连续读取6个地址数据，存储中BUF
 123   1        {
 124   2          BUF[i] = HMC5883_RecvByte();          //BUF[0]存储数据
 125   2          if (i == 5)
 126   2          {
 127   3            HMC5883_SendACK(1);                //最后一个数据需要回NOACK
 128   3          }
 129   2          else
 130   2          {
 131   3            HMC5883_SendACK(0);                //回应ACK
 132   3          }
 133   2        }
 134   1        HMC5883_Stop();                          //停止信号
 135   1        delayms(5);
 136   1      }
 137          //初始化HMC5883，根据需要请参考pdf进行修改****
 138          void Init_HMC5883()
 139          {
 140   1        Single_Write_HMC5883(0x02,0x00);  //
 141   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    268    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      8       9
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
